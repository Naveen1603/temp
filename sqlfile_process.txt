import subprocess

def execute_jar_method(jar_path, class_name, method_name, *args):
    command = ['java', '-cp', jar_path, class_name, method_name, *args]
    subprocess.run(command, check=True)

# Example usage
jar_path = 'path/to/your.jar'
class_name = 'com.example.MyClass'
method_name = 'myMethod'
arg1 = 'argument1'
arg2 = 'argument2'

execute_jar_method(jar_path, class_name, method_name, arg1, arg2)

CREATE TABLE query_store (
    query_name TEXT PRIMARY KEY,
    query_text TEXT
);


CREATE OR REPLACE FUNCTION execute_query(query_name TEXT) RETURNS SETOF record AS $$
DECLARE
    query_to_execute TEXT;
    result_record RECORD;
BEGIN
    SELECT query_text INTO query_to_execute FROM query_store WHERE query_name = execute_query.query_name;
    EXECUTE query_to_execute INTO result_record;
    RETURN NEXT result_record;
END;
$$ LANGUAGE plpgsql;


SELECT * FROM execute_query('insert_query');
